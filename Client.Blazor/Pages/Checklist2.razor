@page "/Checklist2/{FarmInspectionId:int}"
@using Microsoft.AspNetCore.Authorization
@using Agridea.Acorda.AcordaControlOffline.Shared.Domain.Inspection
@attribute [Authorize]

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Récapitulatif</h3>
        <div class="card-tools">
            <button type="button" class="btn btn-sm btn-default" @onclick='() => Navigation.NavigateTo(Config.BaseUrl + "/MandateDetail/" + farmId)'>
                <i class="fas fa-arrow-left"></i>
                Retour Mandat
            </button>
            <button type="button" class="btn btn-sm btn-success" @onclick='() => Navigation.NavigateTo(Config.BaseUrl + "/Signatures/" + FarmInspectionId + "?FarmId=" + farmId)'>
                <i class="fas fa-arrow-right"></i>
                Rapport pdf et signatures
            </button>
        </div>
    </div>
    <div class="card-body">
        @if (progressBarModel != null)
        {
            <ProgressBar Progress="@progressBarModel" />
        }
    </div>
</div>

<div class="card">
    <div class="card-header">
        @if (needsSaving)
        {
            <button class="btn btn-primary float-right" @onclick="@Save" disabled=@saving>
                <i class="@(saving ? "fas fa-spinner fa-spin" : "far fa-save")"></i>
                Enregistrer
            </button>
        }
        <h3 class="card-title">Exigences</h3>
    </div>
    <div class="card-body">
        <p>
            <Blazorise.Switch TValue="bool" @bind-Checked="@showAutoSet"><span class="font-weight-normal">Afficher NA/NC auto</span></Blazorise.Switch>
        </p>
        <div id="checklist">
            <div class="list-group">
                <div id="@(parent?.Id)" class="@(parent != null ? "list-group-item" : null)">
                    @if (parent != null)
                    {
                        <a @onclick="@(() => NodeViewChanged(parent?.ParentConjunctElementCode ?? ""))">
                            <i class="fas fa-chevron-right fa-3x float-left rotate right mr-2"></i>
                        </a>
                        <span class="badge badge-outline text-indigo bg-indigo disabled float-right mr-1">@parent.NumPoints</span>
                        <span class="badge badge-outline text-indigo disabled float-right mr-1">@parent.NumGroups</span>
                        <h4 class="list-group-item-heading">@parent.ShortName</h4>
                        <p class="list-group-item-text mb-2">@parent.ConjunctElementCode</p>
                    }
                    <div class="@(parent != null ? "mt-2" : null)">
                        <div class="list-group">
                            @if (children.Any())
                            {
                                @foreach (var child in children.OrderBy(x => x.Sort).ThenBy(x => x.ConjunctElementCode))
                                {
                                    <ChecklistItem Node="@child"
                                                   ShowIfAutoSet="@showAutoSet"
                                                   OnNodeViewChanged="@NodeViewChanged"
                                                   OnOutcomeChanged="@NodeOutcomeChanged"
                                                   OnEditing="@NodeEditing"
                                                   OnDeleting="@NodeDeleting"
                                                   OnDisplayingInfo="@NodeDisplayingInfo">
                                    </ChecklistItem>
                                }
                            }
                            else
                            {
                                <ChecklistPlaceholderLoading />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<Blazorise.Modal @ref="@info">
    <Blazorise.ModalBackdrop />
    <Blazorise.ModalContent>
        <Blazorise.ModalHeader>
            <Blazorise.ModalTitle>Aide au contrôle, point @conjunctElementCodeForInfo</Blazorise.ModalTitle>
            <Blazorise.CloseButton Clicked="@HideInfo" />
        </Blazorise.ModalHeader>
        <Blazorise.ModalBody>
            <Blazorise.Field>
                <Blazorise.FieldLabel>@infoText</Blazorise.FieldLabel>
            </Blazorise.Field>
        </Blazorise.ModalBody>
        <Blazorise.ModalFooter>
            <button class="btn btn-default" @onclick="HideInfo">Fermer</button>
        </Blazorise.ModalFooter>
    </Blazorise.ModalContent>
</Blazorise.Modal>

<Blazorise.Modal @ref="@confirmDelete">
    <Blazorise.ModalBackdrop />
    <Blazorise.ModalContent>
        <Blazorise.ModalHeader>
            <Blazorise.ModalTitle>Confirmation</Blazorise.ModalTitle>
            <Blazorise.CloseButton Clicked="@CancelDeleteNode" />
        </Blazorise.ModalHeader>
        <Blazorise.ModalBody>
            <Blazorise.Field>
                <Blazorise.FieldLabel>Êtes-vous sûr de vouloir supprimer les information saisies (résultat, remarques, pièces jointes, ...) ?</Blazorise.FieldLabel>
            </Blazorise.Field>
        </Blazorise.ModalBody>
        <Blazorise.ModalFooter>
            <button class="btn btn-info" @onclick="@DeleteNode">Ok</button>
            <button class="btn btn-default" @onclick="@CancelDeleteNode">Annuler</button>
        </Blazorise.ModalFooter>
    </Blazorise.ModalContent>
</Blazorise.Modal>


<Blazorise.Modal @ref="@edit">
@if (editModel != null)
{
    <Blazorise.ModalBackdrop/>
    <EditForm Model="@editModel" OnSubmit="@EditNode">
        <Blazorise.ModalContent>
            <Blazorise.ModalHeader>
                <Blazorise.ModalTitle>Résultat détaillé</Blazorise.ModalTitle>
                <Blazorise.CloseButton Clicked="() => edit.Hide()"/>
            </Blazorise.ModalHeader>
            <Blazorise.ModalBody>
                <Blazorise.Field>
                    <Blazorise.FieldLabel>Remarque contrôleur</Blazorise.FieldLabel>
                    <Blazorise.MemoEdit Rows="2" @bind-Text="@editModel.InspectorComment"></Blazorise.MemoEdit>
                </Blazorise.Field>
                <Blazorise.Field>
                    <Blazorise.FieldLabel>Remarque exploitant</Blazorise.FieldLabel>
                    <Blazorise.MemoEdit Rows="2" @bind-Text="@editModel.FarmerComment"></Blazorise.MemoEdit>
                </Blazorise.Field>
                <div hidden="@(editModel.HasChildren || editModel.Outcome == InspectionOutcome.Ok)">
                    <Blazorise.Validations StatusChanged="@OnValidationStatusChanged">
                        <Blazorise.Validation Validator="@ValidateDefectDescription">
                            @if (editModel.ComboDefects.Any())
                            {
                                <Blazorise.Field>
                                    <Blazorise.FieldLabel>Manquement dans la liste</Blazorise.FieldLabel>
                                    <Blazorise.Select TValue="int?" @bind-SelectedValue="@editModel.DefectId">
                                        @foreach (var option in editModel.ComboDefects)
                                        {
                                            <Blazorise.SelectItem Value="@option.Value">@option.Text</Blazorise.SelectItem>
                                        }
                                    </Blazorise.Select>
                                </Blazorise.Field>
                            }
                            @if (editModel.ComboDefects.Any())
                            {
                                <Blazorise.FieldLabel>OU Manquement constaté</Blazorise.FieldLabel>
                            }
                            else
                            {
                                <Blazorise.FieldLabel>Manquement constaté</Blazorise.FieldLabel>
                            }
                            <Blazorise.TextEdit @bind-Text="@editModel.DefectDescription">
                                <Feedback>
                                    <Blazorise.ValidationError>Le manquement constaté doit soit être choisi dans la liste soit décrit dans le champ textuel (choix exclusif).</Blazorise.ValidationError>
                                </Feedback>
                            </Blazorise.TextEdit>
                        </Blazorise.Validation>
                    </Blazorise.Validations>
                    <Blazorise.Field>
                        <Blazorise.FieldLabel>Ampleur du manquement (par ex: surface, longueur, nombre d'animaux, ...)</Blazorise.FieldLabel>
                        <Blazorise.NumericEdit TValue="double" @bind-Value="@editModel.DefectSize"></Blazorise.NumericEdit>
                    </Blazorise.Field>
                    <Blazorise.Field>
                        <Blazorise.FieldLabel>Unité</Blazorise.FieldLabel>
                        <Blazorise.TextEdit @bind-Text="@editModel.Unit" list="units" autocomplete="off" FocusIn='() => { editModel.Unit = ""; }'></Blazorise.TextEdit>
                        <datalist id="units">
                            @foreach (var option in sortListItemsDatasource)
                            {
                                <option>@option.Id</option>
                            }
                        </datalist>
                    </Blazorise.Field>
                    <Blazorise.Field>
                        <Blazorise.FieldLabel>Gravité (uniquement pour l'OPAn et PPr animale)</Blazorise.FieldLabel>
                        <Blazorise.Select TValue="int" @bind-SelectedValue="@editModel.SeriousnessCode">
                            @foreach (var option in editModel.ComboSeriousnesses)
                            {
                                <Blazorise.SelectItem Value="@option.Value">@option.Text</Blazorise.SelectItem>
                            }
                        </Blazorise.Select>
                    </Blazorise.Field>
                </div>
            </Blazorise.ModalBody>
            <Blazorise.ModalFooter>
                <Blazorise.Button Type="Blazorise.ButtonType.Submit" class="btn btn-primary float-left mr-2" disabled="@editIsInvalid">Ok</Blazorise.Button>
                <Blazorise.Button class="btn btn-default float-left mr-2" @onclick="@CancelEditNode">Annuler</Blazorise.Button>
            </Blazorise.ModalFooter>
        </Blazorise.ModalContent>
    </EditForm>
}
</Blazorise.Modal>
