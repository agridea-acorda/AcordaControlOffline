@page "/Settings"
@using Agridea.Acorda.AcordaControlOffline.Client.Blazor.UiServices
@using Blazored.LocalStorage
@using Agridea.Acorda.AcordaControlOffline.Client.Blazor.Config

@inject ISettingsService SettingsService
@inject IToastService Toast
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage
@inject AppConfiguration Config
@inject IndexedDB.Blazor.IIndexedDbFactory DbFactory

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Options de l'application</h3>
    </div>
    <div class="card-body">
        @if (model == null)
        {
            <p>Chargement...</p>
        }
        else
        {
            <EditForm Model="@model" OnSubmit="@Save">
                <Blazorise.Field>
                    <Blazorise.FieldLabel>Adresse de l'api AcordaControl</Blazorise.FieldLabel>
                    <Blazorise.TextEdit Text="@Config.ApiEndpoint" Disabled="true" />
                </Blazorise.Field>
                <Blazorise.Field>
                    <Blazorise.FieldLabel>Se souvenir des identifiants de connexion pendant (jours)</Blazorise.FieldLabel>
                    <Blazorise.NumericEdit TValue="int" @bind-Value="@model.AuthCookieExpiryDays" Step="1" Min="0" Max="365" />
                </Blazorise.Field>
                <button type="submit" class="btn btn-primary mr-2"><i class="far fa-save"></i> Enregistrer</button>
                @if (!string.IsNullOrWhiteSpace(error))
                {
                    <p class="border border-danger rounded mt-3 p-2 text-danger">@error</p>
                }
            </EditForm>
        }
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Réinitialisation de l'application</h3>
    </div>
    <div class="card-body">
        <div class="callout callout-danger">
            <p class="text-danger"><u>Attention</u>, les mandats téléchargés sur la tablette seront tous effacés. Etes-vous sûr(e) ?</p>
        </div>
        <p><a class="btn btn-outline-danger" href="#" @onclick="Reset">Réinitialiser</a></p>
    </div>
</div>

@code {
    AcordaControlOffline.Client.Blazor.Settings model;
    string error;

    protected override async Task OnInitializedAsync()
    {
        model = await SettingsService.Read();
    }

    async Task Save()
    {
        error = await SettingsService.Save(model);
        if (!string.IsNullOrWhiteSpace(error))
        {
            error = "Enregistrement impossible: " + error;
        }
        else
        {
            Toast.ShowSuccess(ToastMessages.Success, ToastMessages.SuccessHeader);
        }

    }

    async void Reset()
    {
        await LocalStorage.ClearAsync();

        using (var db = await this.DbFactory.Create<Agridea.Acorda.AcordaControlOffline.Shared.ApplicationServices.IndexedDb.ChecklistDb>())
        {
            var filesDelete = db.FileChecklists
                                .ToList();
            foreach (var item in filesDelete)
            {
                db.FileChecklists.Remove(item);
                Console.WriteLine($"File {item.Id} deleted in IndexedDB");
            }
            await db.SaveChanges();
        }

        using (var db = await this.DbFactory.Create<Agridea.Acorda.AcordaControlOffline.Shared.ApplicationServices.IndexedDb.FormInscriptionDb>())
        {
            var filesDelete = db.FormInscriptions
                                .ToList();
            foreach (var item in filesDelete)
            {
                db.FormInscriptions.Remove(item);
                Console.WriteLine($"FormInscription {item.FarmId} deleted in IndexedDB");
            }
            await db.SaveChanges();
        }

        Navigation.NavigateTo(Config.BaseUrl + "/", true);
    }
}
